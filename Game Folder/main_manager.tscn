[gd_scene load_steps=4 format=3 uid="uid://y4ga4anlwqmc"]

[ext_resource type="PackedScene" uid="uid://c4x1qm6djaif4" path="res://Game Folder/game_components/global_loading/loading.tscn" id="1_onr71"]

[sub_resource type="GDScript" id="GDScript_essvl"]
resource_name = "mainscene_manager"
script/source = "extends Node

func _ready():
	global.main_manager = self
	switch_level_to(\"res://Game Folder/game_assets/Menus/MainMenu/BASE/mainmenu.tscn\")

#region NEW Loading
@onready var path_loading = \"null\"
@onready var loading_status
@onready var loading_handler: Node = $Loading_Handler
@onready var loading_visuals: Control = $Loading_Handler/Loading_Visuals

func switch_level_to(level_list):
	_display_load_visuals(level_list)

func _display_load_visuals(level_list):
	loading_handler.display_visuals(true)
	await loading_handler.animation.animation_finished
	load_level(level_list)

func load_level(level_path : StringName):
	if ResourceLoader.has_cached(level_path):
		print(\"Already has path cached in memory.\")
		_hide_load_visuals(ResourceLoader.load_threaded_get(level_path))
	else:
		path_loading = level_path
		ResourceLoader.load_threaded_request(level_path, \"\", true)

func _physics_process(_delta: float) -> void:
	loading_status = ResourceLoader.load_threaded_get_status(path_loading)
	match loading_status:
		0:
			pass
		1:
			ResourceLoader.load_threaded_get_status(path_loading)
		2:
			printerr(\"error in loading\")
		3:
			_hide_load_visuals(ResourceLoader.load_threaded_get(path_loading))
			loading_status = 0

func _hide_load_visuals(loaded_level):
	loading_handler.display_visuals(false)
	await loading_handler.animation.animation_finished
	var i = loaded_level.instantiate()
	add_child(i)
	path_loading = \"null\"
	loading_status = 0


#endregion





func gameover_sequence(is_true_gameover := true):
	ResourceLoader.load_threaded_request(\"res://Game Folder/game_assets/Menus/MainMenu/GameOver/BASE/GameOver.tscn\", \"\", true)
	clear_entities()
	var go_i = ResourceLoader.load_threaded_get(\"res://Game Folder/game_assets/Menus/MainMenu/GameOver/BASE/GameOver.tscn\").instantiate()
	add_child(go_i)
	if is_true_gameover:
		var music = go_i.music as AudioStreamPlayer
		var stream = load(\"res://Game Folder/game_assets/Menus/MainMenu/GameOver/BASE/Starbreaker - Stage Clear.wav\") as AudioStreamWAV
		music.set_stream(stream)
	events.emit_signal(\"GameOver\", int(score_event.score))

func clear_entities():
	for i in get_children():
		if i != loading_handler:
			i.queue_free()
	for i in global.get_children():
		i.queue_free()

func pause(node : Node2D):
	node.process_mode = Node.PROCESS_MODE_DISABLED

func unpause(node : Node2D):
	node.process_mode = Node.PROCESS_MODE_ALWAYS
"

[sub_resource type="GDScript" id="GDScript_es8hl"]
script/source = "extends Node
@onready var animation: AnimationPlayer = $Loading_Visuals/Animation

func display_visuals(display : bool):
	if display:
		animation.play(\"RESET\")
		animation.play(\"Fade_To_Show\")
	else:
		animation.play(\"RESET\")
		animation.play(\"Fade_To_Hide\")
"

[node name="MAIN_MANAGER" type="Node"]
script = SubResource("GDScript_essvl")

[node name="Loading_Handler" type="Node" parent="."]
script = SubResource("GDScript_es8hl")

[node name="Loading_Visuals" parent="Loading_Handler" instance=ExtResource("1_onr71")]
