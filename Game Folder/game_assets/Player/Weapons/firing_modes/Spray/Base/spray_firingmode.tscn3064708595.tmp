[gd_scene load_steps=4 format=3 uid="uid://fual85xipl34"]

[sub_resource type="GDScript" id="GDScript_4ckef"]
resource_name = "primaryweaponscript"
script/source = "extends Node

@export var primary_enabled := true
@export var firerate := 0.085
@export var secondary_enabled := true
@export var secondary_max_damage := 125.0
@export var secondary_min_damage := 40.0
"

[sub_resource type="GDScript" id="GDScript_ukyu0"]
script/source = "extends Weapon
const PLAYER_BULLET = preload(\"res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Base/player_bullet.tscn\")

@onready var firerate : float = get_parent().primary_firerate

@onready var bullet_pos = 1
@onready var right_pos = Vector2(5.5, -0.6)
@onready var left_pos = Vector2(-5.5, -0.6)

var switch_bullet_position = func(_proj_int): match(bullet_pos):
		1:
			_proj_int.global_position += right_pos
			bullet_pos = 2
		2:
			_proj_int.global_position += left_pos
			bullet_pos = 1

func _physics_process(delta: float) -> void:
	if Input.is_action_pressed(\"primary\") and is_weapon_actionable and cooldown_timer.time_left <= 0 and get_parent().primary_enabled:
		action()

func action():
	cooldown_timer.start(firerate)
	spawn_projectile()
	emit_signal(\"player_onprimaryfired\")

func spawn_projectile():
	var proj_int = PLAYER_BULLET.instantiate()
	proj_int.global_position = global.player.global_position
	switch_bullet_position.call(proj_int)
	global.EntityManager.add_child(proj_int)
"

[sub_resource type="GDScript" id="GDScript_m72t4"]
script/source = "extends Weapon

func _physics_process(delta: float) -> void:
	if Input.is_action_pressed(\"secondary\") and is_weapon_actionable and cooldown_timer.time_left <= 0 and get_parent().secondary_enabled:
		
"

[node name="Ol\' Reliable" type="Node"]
script = SubResource("GDScript_4ckef")

[node name="PrimaryAction" type="Node" parent="."]
script = SubResource("GDScript_ukyu0")

[node name="SecondaryAction" type="Node" parent="."]
script = SubResource("GDScript_m72t4")
