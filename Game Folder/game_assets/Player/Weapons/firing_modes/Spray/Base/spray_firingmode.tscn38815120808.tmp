[gd_scene load_steps=8 format=3 uid="uid://fual85xipl34"]

[ext_resource type="AudioStream" uid="uid://bxrhsgdwv711w" path="res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Audio/sp_firing.wav" id="1_ow2yi"]
[ext_resource type="AudioStream" uid="uid://cybqkartw260u" path="res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Audio/sfx_spraysecondary.wav" id="2_56b5w"]

[sub_resource type="GDScript" id="GDScript_4ckef"]
resource_name = "primaryweaponscript"
script/source = "extends Node

@export var primary_enabled := true
@export var firerate := 0.085
@export var secondary_enabled := true
@export var secondary_max_damage := 125.0
@export var secondary_min_damage := 40.0
@export var secondary_charge_persecond := 100.0
@export var secondary_firerate := 3.75
@export var secondary_decreases_energy := true
@export var energy_deaccelerant := 35.7143
@export var secondary_decreases_speed := true
@export var speed_deaccelerant := 250

func _ready() -> void:
	cache.load_in_cache(\"res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Base/player_bullet.tscn\")
	cache.load_in_cache(\"res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Base/secondary_projectile.tscn\")
"

[sub_resource type="GDScript" id="GDScript_ukyu0"]
script/source = "extends Weapon
const PLAYER_BULLET = preload(\"res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Base/player_bullet.tscn\")
@onready var rotation_marker: Marker2D = $Rotation
@onready var primary_firing: AudioStreamPlayer = $\"../PrimaryFiring\"

@onready var firerate : float = get_parent().firerate

@onready var bullet_pos = 1
@onready var right_pos = Vector2(2, 10)
@onready var left_pos = Vector2(2, -10)

var switch_bullet_position = func(_proj_int): 
	match(bullet_pos):
		1:
			_proj_int.global_position += right_pos.rotated(rotation_marker.global_rotation)
			bullet_pos = 2
		2:
			_proj_int.global_position += left_pos.rotated(rotation_marker.global_rotation)
			bullet_pos = 1


func _physics_process(delta: float) -> void:
	if global.player:
		rotation_marker.global_rotation_degrees = global.player.global_rotation_degrees
		rotation_marker.global_position = global.player.global_position
	if Input.is_action_pressed(\"primary\") and is_weapon_actionable and cooldown_timer.time_left <= 0 and get_parent().primary_enabled and global.player.weapons.is_all_weapons_actionable:
		action()

func action():
	cooldown_timer.start(firerate)
	spawn_projectile()
	emit_signal(\"player_onprimaryfired\")

func spawn_projectile():
	primary_firing.play()
	var proj_int = PLAYER_BULLET.instantiate()
	proj_int.global_rotation_degrees = rotation_marker.global_rotation_degrees
	proj_int.global_position = rotation_marker.global_position
	switch_bullet_position.call(proj_int)
	global.EntityManager.add_child(proj_int)
"

[sub_resource type="GDScript" id="GDScript_m72t4"]
script/source = "extends Weapon
const PLAYER_BULLET = preload(\"res://Game Folder/game_assets/Player/Weapons/firing_modes/Spray/Base/secondary_projectile.tscn\")
@onready var secondary_firing: AudioStreamPlayer = $\"../SecondaryFiring\"

@onready var min_damage = get_parent().secondary_min_damage
@onready var max_damage = get_parent().secondary_max_damage
@onready var damage_chargerate = get_parent().secondary_charge_persecond
@onready var charged_damage = min_damage

func _physics_process(delta: float) -> void:
	if Input.is_action_pressed(\"secondary\") and is_weapon_actionable and cooldown_timer.time_left <= 0 and get_parent().secondary_enabled and global.player.weapons.is_all_weapons_actionable:
		charge(delta)
	if Input.is_action_just_released(\"secondary\") and is_weapon_actionable and cooldown_timer.time_left <= 0 and get_parent().secondary_enabled and global.player.weapons.is_all_weapons_actionable:
		release(charged_damage)

func charge(delta):
	get_parent().primary_enabled = false
	charged_damage += damage_chargerate * delta
	if get_parent().secondary_decreases_energy:
		global.player.weapons.current_energy -= get_parent().energy_deaccelerant * delta
		if global.player.weapons.current_energy <= 0:
			release(charged_damage)
	if get_parent().secondary_decreases_speed:
		global.player.physics.max_movement_speed -= get_parent().speed_deaccelerant * delta
	charged_damage = ceili(clampi(charged_damage, min_damage, max_damage))
	if charged_damage >= max_damage:
		release(charged_damage)

func release(damage : float):
	secondary_firing.play()
	charged_damage = clampf(charged_damage, min_damage, max_damage)
	global.player.physics.max_movement_speed = global.player.physics.default_movement_speed
	var proj_int = PLAYER_BULLET.instantiate()
	proj_int.global_rotation_degrees = global.player.global_rotation_degrees + 90
	proj_int.global_position = global.player.global_position
	proj_int.hitbox.damage = -ceili(damage)
	global.EntityManager.add_child(proj_int)
	cooldown_timer.start(get_parent().secondary_firerate)
	charged_damage = min_damage
	get_parent().primary_enabled = true
"

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_7yd6t"]
random_pitch = 1.1
streams_count = 1
stream_0/stream = ExtResource("1_ow2yi")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_ow2yi"]
random_pitch = 1.1
streams_count = 1
stream_0/stream = ExtResource("2_56b5w")

[node name="Ol\' Reliable" type="Node"]
script = SubResource("GDScript_4ckef")
secondary_max_damage = 250.0
secondary_charge_persecond = 250.0
secondary_firerate = 0.8

[node name="PrimaryAction" type="Node" parent="."]
script = SubResource("GDScript_ukyu0")

[node name="Rotation" type="Marker2D" parent="PrimaryAction"]

[node name="SecondaryAction" type="Node" parent="."]
script = SubResource("GDScript_m72t4")

[node name="PrimaryFiring" type="AudioStreamPlayer" parent="."]
stream = SubResource("AudioStreamRandomizer_7yd6t")
volume_db = -6.0
bus = &"SFX"

[node name="SecondaryFiring" type="AudioStreamPlayer" parent="."]
stream = SubResource("AudioStreamRandomizer_ow2yi")
volume_db = 12.0
bus = &"SFX"
