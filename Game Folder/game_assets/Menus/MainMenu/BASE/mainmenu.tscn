[gd_scene load_steps=38 format=3 uid="uid://c8cl1sli3qnjh"]

[ext_resource type="AudioStream" uid="uid://erm3xbidorsi" path="res://Game Folder/game_assets/Menus/MainMenu/BASE/starbreaker - menu (chillin).mp3" id="1_b1kbp"]
[ext_resource type="Shader" uid="uid://qtemwvecpr14" path="res://Game Folder/game_assets/Player/HUD/outlinecanvaslayer.gdshader" id="3_8jj6y"]
[ext_resource type="Theme" uid="uid://b1rbffoke0vnr" path="res://Game Folder/game_assets/Menus/Themes/MenuUI_Theme.tres" id="3_mm2qm"]
[ext_resource type="Texture2D" uid="uid://cs6s2641cjjdq" path="res://Game Folder/game_assets/Menus/MainMenu/Sprites/title.png" id="3_wslbo"]
[ext_resource type="Script" uid="uid://cb7ckkc703no7" path="res://Game Folder/game_components/button_component/global_button.gd" id="4_tprer"]

[sub_resource type="GDScript" id="GDScript_cf4c7"]
resource_name = "mainmenu"
script/source = "extends Node2D
@onready var main_menu = $MainMenu
@onready var options_menu = $Options

@onready var mm_music: AudioStreamPlayer = $MM_Music

func start():
	global.current_stage = self
	main_menu.show()
	mm_music.play()


func _ready() -> void:
	start()

func play_pressed() -> void:
	$MainMenu/ButtonContainer.queue_free()
	global.main_manager.switch_level_to(\"res://Game Folder/game_assets/Menus/StageSelect/Base/stage_select.tscn\")
	queue_free()


func options_pressed():
	pass

func quit_pressed() -> void:
	get_tree().quit(0)


func release_focus() -> void:
	pass # Replace with function body.
"

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_e5p0j"]
particle_flag_disable_z = true
emission_shape = 3
emission_box_extents = Vector3(1000, 1000, 1)
gravity = Vector3(0, 0, 0)
color = Color(1, 1, 1, 0.00784314)

[sub_resource type="Shader" id="Shader_8jj6y"]
code = "
shader_type canvas_item;

uniform vec4 color : source_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false
uniform vec2 number_of_images = vec2(1.0); // number of horizontal and vertical images in the sprite sheet

varying flat vec4 modulate;

void vertex() {
	modulate = COLOR;
	
	if (add_margins) {
		if ((UV.x <= 0.0 || UV.x >= 1.0) && (UV.y <= 0.0 || UV.y >= 1.0)) {
			VERTEX += (UV * 2.0 - 1.0) * width;
		} else {
			VERTEX += sign(VERTEX) * width; // replace sign(VERTEX) by (sign(VERTEX) * 2.0 - 1.0) if your AnimatedSprite2D isn't Centered
		}
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, vec2 image_top_left, vec2 image_bottom_right, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, image_top_left, image_bottom_right) || texture(texture, xy).a <= 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	vec2 image_top_left = floor(uv * number_of_images) / number_of_images;
	vec2 image_bottom_right = image_top_left + vec2(1.0) / number_of_images;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0) * number_of_images);
		
		uv = (uv - texture_pixel_size * width - image_top_left) * TEXTURE_PIXEL_SIZE / texture_pixel_size + image_top_left;
		
		if (uv != clamp(uv, image_top_left, image_bottom_right)) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv) * modulate;
		}
	} else {
		COLOR = texture(TEXTURE, uv) * modulate;
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, image_top_left, image_bottom_right, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb * modulate.rgb, color.a * modulate.a) : color.rgb * modulate.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a * modulate.a;
	}
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_g26pg"]
shader = SubResource("Shader_8jj6y")
shader_parameter/color = Color(1, 1, 1, 1)
shader_parameter/width = 1.0
shader_parameter/pattern = 0
shader_parameter/inside = false
shader_parameter/add_margins = true
shader_parameter/number_of_images = Vector2(1, 1)

[sub_resource type="Animation" id="Animation_mg2qj"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, -140)]
}

[sub_resource type="Animation" id="Animation_c6u7e"]
resource_name = "bob"
length = 4.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(0, -325), Vector2(0, -300)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_0bqiu"]
_data = {
&"RESET": SubResource("Animation_mg2qj"),
&"bob": SubResource("Animation_c6u7e")
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_n6j81"]
shader = ExtResource("3_8jj6y")
shader_parameter/color = Color(1, 1, 1, 1)
shader_parameter/width = 1.0
shader_parameter/pattern = 0
shader_parameter/inside = false
shader_parameter/add_margins = true
shader_parameter/number_of_images = Vector2(1, 1)

[sub_resource type="GDScript" id="GDScript_ai1e2"]
script/source = "extends CustomButton
@onready var main_camera: Camera2D = $\"../../../MainCamera\"
@onready var skills_camera: Camera2D = $\"../../../SkillsCamera\"


func on_pressed() -> void:
	main_camera.enabled = false
	skills_camera.enabled = true
"

[sub_resource type="GDScript" id="GDScript_g26pg"]
script/source = "extends CustomButton
"

[sub_resource type="Shader" id="Shader_ai1e2"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8jj6y"]
render_priority = 0
shader = SubResource("Shader_ai1e2")

[sub_resource type="Curve" id="Curve_g26pg"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_n6j81"]
curve = SubResource("Curve_g26pg")

[sub_resource type="Curve" id="Curve_fxp30"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(0.251534, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="CurveTexture" id="CurveTexture_b38tb"]
curve = SubResource("Curve_fxp30")

[sub_resource type="Curve" id="Curve_8jj6y"]
_data = [Vector2(0, 1), 0.0, 0.0, 0, 0, Vector2(1, 0), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="CurveTexture" id="CurveTexture_g26pg"]
curve = SubResource("Curve_8jj6y")

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_n6j81"]
particle_flag_disable_z = true
emission_shape_offset = Vector3(486.5, 0, 0)
emission_shape = 3
emission_box_extents = Vector3(997.5, 919, 1)
direction = Vector3(0, 0, 0)
radial_velocity_min = -2.23517e-05
radial_velocity_max = 149.25
gravity = Vector3(0, 98, 0)
scale_curve = SubResource("CurveTexture_b38tb")
alpha_curve = SubResource("CurveTexture_n6j81")
hue_variation_min = -0.01
hue_variation_max = 0.00999998
turbulence_enabled = true
turbulence_influence_min = 0.155
turbulence_influence_max = 0.202
turbulence_influence_over_life = SubResource("CurveTexture_g26pg")

[sub_resource type="GDScript" id="GDScript_vca51"]
script/source = "extends CustomButton
@onready var main_camera: Camera2D = $\"../../MainCamera\"
@onready var options_camera: Camera2D = $\"../../OptionsCamera\"
@onready var mm_music: AudioStreamPlayer = $\"../../MM_Music\"

func _ready() -> void:
	super()
	self.connect(\"pressed\", pressed)

func pressed():
	main_camera.enabled = true
	options_camera.enabled = false
"

[sub_resource type="GDScript" id="GDScript_a4pt7"]
script/source = "extends CustomButton


func _ready() -> void:
	button_pressed = options.screenshake_enabled

func _physics_process(delta: float) -> void:
	super(delta)
	match button_pressed:
		true:
			text = \"Screenshake : ON\"
			options.screenshake_enabled = true
		false:
			text = \"Screenshake : OFF\"
			options.screenshake_enabled = false
"

[sub_resource type="GDScript" id="GDScript_xuveb"]
script/source = "extends CustomButton

func _ready() -> void:
	button_pressed = options.screen_flash

func _physics_process(delta: float) -> void:
	super(delta)
	match button_pressed:
		true:
			text = \"Screen-Flashing : ON\"
			options.screen_flash = true
		false:
			text = \"Screen-Flashing : OFF\"
			options.screen_flash = false
"

[sub_resource type="GDScript" id="GDScript_faceb"]
script/source = "extends CustomButton

func _ready() -> void:
	button_pressed = options.extra_vfx

func _physics_process(delta: float) -> void:
	super(delta)
	match button_pressed:
		true:
			text = \"Extra VFX : ON\"
			options.extra_vfx = true
		false:
			text = \"Extra VFX : OFF\"
			options.extra_vfx = false
"

[sub_resource type="GDScript" id="GDScript_sfec3"]
script/source = "extends HSlider

@export var audio_bus_name := \"Master\"

@onready var _bus := AudioServer.get_bus_index(audio_bus_name)


func _ready() -> void:
	value = db_to_linear(AudioServer.get_bus_volume_db(_bus))

func _on_value_changed(value: float) -> void:
	AudioServer.set_bus_volume_db(0, linear_to_db(value))
"

[sub_resource type="GDScript" id="GDScript_wo5kl"]
script/source = "extends HSlider

@export var audio_bus_name := \"Master\"

@onready var _bus := AudioServer.get_bus_index(audio_bus_name)


func _ready() -> void:
	value = db_to_linear(AudioServer.get_bus_volume_db(1))

func _on_value_changed(value: float) -> void:
	AudioServer.set_bus_volume_db(1, linear_to_db(value))
"

[sub_resource type="GDScript" id="GDScript_n2lrk"]
script/source = "extends HSlider

@export var audio_bus_name := \"Master\"

@onready var _bus := AudioServer.get_bus_index(audio_bus_name)


func _ready() -> void:
	value = db_to_linear(AudioServer.get_bus_volume_db(2))

func _on_value_changed(value: float) -> void:
	AudioServer.set_bus_volume_db(2, linear_to_db(value))
"

[sub_resource type="GDScript" id="GDScript_w84vj"]
script/source = "extends HSlider
@onready var environment: WorldEnvironment = $\"../../../Environment\"


func _ready() -> void:
	environment.environment.glow_bloom = options.bloom
	value = environment.environment.glow_bloom

func value_changed(value: float) -> void:
	environment.environment.glow_bloom = value
	options.bloom = value
"

[sub_resource type="GDScript" id="GDScript_8jj6y"]
script/source = "extends Button
"

[sub_resource type="Animation" id="Animation_lhi5l"]
resource_name = "Fade"
length = 0.62
step = 0.01
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Black:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.55),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../MM_Music:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Black")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.00999999, 0.55),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"show"
}, {
"args": [],
"method": &"hide"
}]
}

[sub_resource type="Animation" id="Animation_igopm"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Black:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../MM_Music:playing")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/2/type = "method"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Black")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"hide"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_n1wfx"]
_data = {
&"Fade": SubResource("Animation_lhi5l"),
&"RESET": SubResource("Animation_igopm")
}

[sub_resource type="Environment" id="Environment_5lcc6"]
background_mode = 3
glow_enabled = true
glow_bloom = 0.25

[node name="MainMenu" type="Node2D"]
script = SubResource("GDScript_cf4c7")

[node name="VisualEffects" type="Node2D" parent="."]

[node name="Motionlines" type="GPUParticles2D" parent="VisualEffects"]
position = Vector2(336, 8)
amount = 2743
lifetime = 3.0
preprocess = 20.0
fixed_fps = 28
interpolate = false
visibility_rect = Rect2(-348, -25, 686.5, 387)
process_material = SubResource("ParticleProcessMaterial_e5p0j")

[node name="MainCamera" type="Camera2D" parent="."]
anchor_mode = 0
ignore_rotation = false
process_callback = 0

[node name="OptionsCamera" type="Camera2D" parent="."]
position = Vector2(1984, 0)
anchor_mode = 0
ignore_rotation = false
enabled = false

[node name="SkillsCamera" type="Camera2D" parent="."]
position = Vector2(0, 1152)
anchor_mode = 0
ignore_rotation = false
enabled = false
process_callback = 0

[node name="MM_Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource("1_b1kbp")
bus = &"Music"

[node name="MainMenu" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 1920.0
offset_bottom = 1080.0

[node name="Title" type="TextureRect" parent="MainMenu"]
material = SubResource("ShaderMaterial_g26pg")
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -960.0
offset_top = -324.57
offset_right = 960.0
offset_bottom = 1283.43
grow_horizontal = 2
texture = ExtResource("3_wslbo")

[node name="Animation" type="AnimationPlayer" parent="MainMenu/Title"]
libraries = {
&"": SubResource("AnimationLibrary_0bqiu")
}
autoplay = "bob"
playback_default_blend_time = 1.0

[node name="ButtonContainer" type="VBoxContainer" parent="MainMenu"]
material = SubResource("ShaderMaterial_n6j81")
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -768.0
offset_top = 228.0
offset_right = -256.0
offset_bottom = 484.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("3_mm2qm")
alignment = 1

[node name="PLAY" type="Button" parent="MainMenu/ButtonContainer"]
layout_mode = 2
text = "Play"
flat = true
text_overrun_behavior = 1
script = ExtResource("4_tprer")

[node name="SKILLS" type="Button" parent="MainMenu/ButtonContainer"]
layout_mode = 2
text = "Skills"
flat = true
script = SubResource("GDScript_ai1e2")

[node name="INDEX" type="Button" parent="MainMenu/ButtonContainer"]
layout_mode = 2
text = "Index"
flat = true
script = SubResource("GDScript_g26pg")

[node name="OPTIONS" type="Button" parent="MainMenu/ButtonContainer"]
material = SubResource("ShaderMaterial_8jj6y")
layout_mode = 2
text = "Options"
flat = true
script = ExtResource("4_tprer")

[node name="QUIT" type="Button" parent="MainMenu/ButtonContainer"]
layout_mode = 2
focus_mode = 0
shortcut_feedback = false
shortcut_in_tooltip = false
text = "Quit"
flat = true
script = ExtResource("4_tprer")

[node name="StarTwinkles" type="GPUParticles2D" parent="MainMenu"]
z_index = -4096
position = Vector2(384, 376)
amount = 512
lifetime = 2.0
randomness = 1.0
fixed_fps = 144
visibility_rect = Rect2(-100, -100, 1157.5, 643.5)
process_material = SubResource("ParticleProcessMaterial_n6j81")

[node name="Options" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 1984.0
offset_right = 3904.0
offset_bottom = 1080.0
grow_horizontal = 2
grow_vertical = 2

[node name="ReturnToMenuButton" type="Button" parent="Options"]
layout_mode = 0
offset_right = 192.0
offset_bottom = 64.0
theme = ExtResource("3_mm2qm")
text = "Return"
script = SubResource("GDScript_vca51")
scales_with_input = false

[node name="OptionsContainer" type="VBoxContainer" parent="Options"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -159.0
offset_top = -156.0
offset_right = 55.0
offset_bottom = 85.0
grow_horizontal = 2
grow_vertical = 2

[node name="Screenshake" type="Button" parent="Options/OptionsContainer"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
toggle_mode = true
button_pressed = true
shortcut_feedback = false
shortcut_in_tooltip = false
text = "Screenshake : "
script = SubResource("GDScript_a4pt7")

[node name="Screen Flashing" type="Button" parent="Options/OptionsContainer"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
toggle_mode = true
button_pressed = true
text = "Screen Flashing"
script = SubResource("GDScript_xuveb")

[node name="Extra Particles" type="Button" parent="Options/OptionsContainer"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
toggle_mode = true
button_pressed = true
text = "Extra VFX : "
script = SubResource("GDScript_faceb")

[node name="Container" type="VBoxContainer" parent="Options"]
layout_mode = 1
anchors_preset = 6
anchor_left = 1.0
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
offset_left = -1408.0
offset_top = -156.0
offset_right = -1153.0
offset_bottom = 100.0
grow_horizontal = 0
grow_vertical = 2
size_flags_horizontal = 0

[node name="MasterAudio" type="Label" parent="Options/Container"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
text = "Master Audio "
horizontal_alignment = 1

[node name="Master Vol" type="HSlider" parent="Options/Container"]
layout_mode = 2
max_value = 2.0
step = 0.1
script = SubResource("GDScript_sfec3")

[node name="SFX" type="Label" parent="Options/Container"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
text = "SFX"
horizontal_alignment = 1

[node name="SFX Vol" type="HSlider" parent="Options/Container"]
layout_mode = 2
max_value = 2.0
step = 0.1
script = SubResource("GDScript_wo5kl")
audio_bus_name = "SFX"

[node name="Music" type="Label" parent="Options/Container"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
text = "Music
"
horizontal_alignment = 1

[node name="Music Vol" type="HSlider" parent="Options/Container"]
layout_mode = 2
max_value = 2.0
step = 0.1
script = SubResource("GDScript_n2lrk")

[node name="Bloom_Text" type="Label" parent="Options/Container"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
text = "Bloom"
horizontal_alignment = 1

[node name="Bloom" type="HSlider" parent="Options/Container"]
layout_mode = 2
theme = ExtResource("3_mm2qm")
max_value = 1.0
step = 0.1
script = SubResource("GDScript_w84vj")

[node name="Skills" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0
theme = ExtResource("3_mm2qm")

[node name="Return" type="Button" parent="Skills"]
layout_mode = 0
offset_left = 27.0
offset_top = 1168.0
offset_right = 192.0
offset_bottom = 1215.0
text = "Return"
script = SubResource("GDScript_8jj6y")

[node name="primary" type="OptionButton" parent="Skills"]
layout_mode = 0
offset_left = 120.0
offset_top = 1664.0
offset_right = 304.0
offset_bottom = 1728.0
selected = 0
allow_reselect = true
item_count = 3
popup/item_0/text = "Spray"
popup/item_0/id = 0
popup/item_1/text = "Shotgun"
popup/item_1/id = 1
popup/item_2/text = "Slash"
popup/item_2/id = 2

[node name="secondary" type="OptionButton" parent="Skills"]
layout_mode = 0
offset_left = 384.0
offset_top = 1664.0
offset_right = 568.0
offset_bottom = 1728.0
selected = 0
item_count = 1
popup/item_0/text = "None"
popup/item_0/id = 0

[node name="utility" type="OptionButton" parent="Skills"]
layout_mode = 0
offset_left = 640.0
offset_top = 1664.0
offset_right = 824.0
offset_bottom = 1728.0
selected = 0
allow_reselect = true
item_count = 2
popup/item_0/text = "Zip-Dash"
popup/item_0/id = 0
popup/item_1/text = "Shine"
popup/item_1/id = 1

[node name="breaker" type="OptionButton" parent="Skills"]
layout_mode = 0
offset_left = 896.0
offset_top = 1664.0
offset_right = 1080.0
offset_bottom = 1728.0
selected = 0
item_count = 1
popup/item_0/text = "None"
popup/item_0/id = 0

[node name="Fade" type="Node" parent="."]

[node name="Black" type="ColorRect" parent="Fade"]
z_index = 10
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
mouse_filter = 1
color = Color(0, 0, 0, 1)

[node name="Fade" type="AnimationPlayer" parent="Fade"]
libraries = {
&"": SubResource("AnimationLibrary_n1wfx")
}
autoplay = "Fade"

[node name="Environment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_5lcc6")

[connection signal="pressed" from="MainMenu/ButtonContainer/PLAY" to="." method="play_pressed"]
[connection signal="pressed" from="MainMenu/ButtonContainer/SKILLS" to="MainMenu/ButtonContainer/SKILLS" method="on_pressed"]
[connection signal="pressed" from="MainMenu/ButtonContainer/OPTIONS" to="." method="options_pressed"]
[connection signal="pressed" from="MainMenu/ButtonContainer/QUIT" to="." method="quit_pressed"]
[connection signal="value_changed" from="Options/Container/Master Vol" to="Options/Container/Master Vol" method="_on_value_changed"]
[connection signal="value_changed" from="Options/Container/SFX Vol" to="Options/Container/SFX Vol" method="_on_value_changed"]
[connection signal="value_changed" from="Options/Container/Music Vol" to="Options/Container/Music Vol" method="_on_value_changed"]
[connection signal="value_changed" from="Options/Container/Bloom" to="Options/Container/Bloom" method="value_changed"]
[connection signal="pressed" from="Skills/Return" to="Skills/Return" method="on_pressed"]
[connection signal="item_selected" from="Skills/primary" to="Skills" method="_on_primary_item_selected"]
[connection signal="item_selected" from="Skills/secondary" to="Skills" method="_on_secondary_item_selected"]
[connection signal="item_selected" from="Skills/utility" to="Skills" method="_on_utility_item_selected"]
[connection signal="item_selected" from="Skills/breaker" to="Skills" method="_on_breaker_item_selected"]
