[gd_scene load_steps=3 format=3 uid="uid://j8na7wf2jjuj"]

[sub_resource type="Curve2D" id="Curve2D_76aar"]
_data = {
"points": PackedVector2Array(0, 0, 0, 0, 0.0954086, 360, 0, 0, 0, 0, 128, -0.0339231, 0, 0, 0, 0, 256.095, 359.932, 0, 0, 0, 0, 384, -0.101769, 0, 0, 0, 0, 512.095, 359.864, 0, 0, 0, 0, 640, -0.169615)
}
point_count = 6

[sub_resource type="GDScript" id="GDScript_mw0be"]
script/source = "extends Path2D
const ASETROID = preload(\"res://Game Folder/game_assets/Stages/01 - Tres-2B/Obstacles/asetroid.tscn\")
@onready var line: Line2D = $Line

@export var spawn_time = 0.0
@export var amount := 0
@export var speed_multiplier := 0.0
@export var spawning_interval := 1.0
@onready var finished_intro = false
@onready var finished_spawn = false

@onready var started = false

var color = Color(\"ff00000a\")
var width = 0.1 

func appear(audio_time):
	audio_time = snappedf(audio_time, 0.1)
	if audio_time == spawn_time:
		show()
		process_mode = ProcessMode.PROCESS_MODE_INHERIT
		if started == false:
			begin_spawning()


func _draw():
	if get_child_count() <= 0 and self.is_visible_in_tree() and finished_spawn == true and width <= 0:
		color = Color.TRANSPARENT
	if curve.get_point_count() > 0:
		draw_polyline(curve.get_baked_points(), color, width, false)
	#for p in curve.get_point_count():
		#var pos = curve.get_point_position(p) 
		#draw_circle(pos, 5, Color(\"ff000028\"))

func begin_spawning():
	started = true
	for c in range(amount):
		
		var x = PathFollow2D.new()
		
		var i = ASETROID.instantiate()
		i.global_position = self.global_position
		
		await get_tree().create_timer(spawning_interval, false, true, false).timeout
		self.add_child(x)
		x.add_child(i, true)
		
		if c == amount - 1:
			finished_spawn = true
			print('yes')
		else:
			finished_spawn = false



func _ready() -> void:
	hide()
	process_mode = ProcessMode.PROCESS_MODE_DISABLED
	events.connect(\"stage_time\", appear, 1)
	
	#line.add_point(self.curve.get_point_position(0), 0)
	#line.add_point(self.curve.get_point_position(1), 1)
	#line.add_point(self.curve.get_point_position(2), 2)

func _process(delta: float) -> void:
	queue_redraw()
	if finished_intro == false:
		width += 0.5 / 1.0 * delta
		if width >= 1.5:
			width = clamp(width, 1.5, 1.5)
			finished_intro = true
	
	if get_child_count() <= 0 and self.is_visible_in_tree() and finished_spawn == true:
		width -= 0.5 / 1.0 * delta
		if width <= 0:
			queue_free()
"

[node name="pathed_asetroid_belt" type="Path2D"]
curve = SubResource("Curve2D_76aar")
script = SubResource("GDScript_mw0be")
